- name: Gather facts about an AMI using ami-id
  ec2_ami_facts:
    filters:
      name: "Windows_Server-2019-English-Full-Base-*"
      owner-id: "801119661308"
  register: amis

- debug:
    var: amis.images.0.image_id

- name: Launch an instance
  ec2_instance:
    name: "{{ vm_name }}"
    vpc_subnet_id: "{{ vm_subnet }}"
    instance_type: "{{ vm_type }}"
    instance_role: "{{ vm_role }}"
    security_group: "{{ vm_sg_id }}"
    image_id: "{{ amis.images.0.image_id }}"
    user_data: "{{ lookup('template', 'templates/userdata.txt.j2') }}"
    volumes:
    - device_name: /dev/sda1
      ebs:
        volume_size: 50
        delete_on_termination: true
    wait: yes
    wait_timeout: 600
    tags:
      Name: "{{ vm_name }}"
      instance-parker: workdays
  register: ec2

- debug:
    var: ec2.instances

- name: Wait for Windows server to respond to WinRM pings
  wait_for:
    port: 5986
    host: "{{ ec2.instances.0.private_ip_address }}"
    delay: 10
    timeout: 360
    state: started

- name: Add windows hosts to inventory
  add_host:
    name: "win-{{ ec2.instances.0.id }}"
    ansible_ssh_host: "{{ ec2.instances.0.private_ip_address }}"
    groups: base_image
    ansible_connection: winrm
    ansible_ssh_port: 5986
    ansible_ssh_user: "{{ admin_user }}"
    ansible_ssh_pass: "{{ admin_password }}"
    ansible_winrm_server_cert_validation: ignore
